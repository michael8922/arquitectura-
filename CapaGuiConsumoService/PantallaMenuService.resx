<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>